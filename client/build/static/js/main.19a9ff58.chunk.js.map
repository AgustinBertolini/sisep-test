{"version":3,"sources":["SocketContext.js","pages/Entrevista/components/RowMessage.js","pages/Entrevista/components/styles/DivChat.js","pages/Entrevista/components/styles/DivSendMessage.js","pages/Entrevista/components/styles/InputMessage.js","pages/Entrevista/components/styles/SendIcon.js","helpers/firebase.js","pages/Entrevista/components/Chat.js","pages/Entrevista/components/TextAreaCode.js","pages/Entrevista/components/VideoPlayer.js","pages/Entrevista/components/InitialDataModal.js","pages/Entrevista/Index.js","components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","stream","setStream","_useState3","_useState4","me","setMe","_useState5","_useState6","call","setCall","_useState7","_useState8","callAccepted","setCallAccepted","_useState9","_useState10","callEnded","setCallEnded","_useState11","_useState12","name","setName","_useState13","_useState14","interviewedName","setInterviewedName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","_ref2","from","callerName","signal","isReceivingCall","react_default","a","createElement","Provider","value","callUser","callingName","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answercall","isCodeInterview","to","library","add","faClock","faCheckDouble","RowMessage","props","useContext","message","messageName","date","Fragment","className","style","justifyContent","concat","getHours","toString","padStart","getMinutes","react_fontawesome_index_es","icon","size","DivChat","styled","div","_templateObject","taggedTemplateLiteral","DivSendMessage","DivSendMessage_templateObject","InputMessage","input","InputMessage_templateObject","SendIcon","FontAwesomeIcon","SendIcon_templateObject","require","config","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","faCircleChevronRight","Chat","isInterviewer","conversationState","setConversationState","messageState","setMessageState","handleSubmitMessage","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","collection","guid","Timestamp","fromDate","Date","isEntrevistador","stop","apply","this","arguments","fetchData","_ref3","_callee2","_context2","onSnapshot","res","docs","sort","b","seconds","map","doc","borderLeft","length","conversation","components_RowMessage","emisor","type","autoComplete","placeholder","onChange","e","target","onKeyUp","key","onClick","TextAreaCode","docIdState","setDocIdState","codeState","setCodeState","handleSetCode","set","code","savedCode","find","react_textarea_code_editor_esm","language","evn","padding","fontSize","border","backgroundColor","marginBottom","minHeight","fontFamily","VideoPlayer","_useContext","reactstrap_module","paddingLeft","paddingTop","xs","display","flexDirection","textAlign","paddingRight","width","height","playsInline","muted","ref","autoPlay","borderRadius","fontWeight","color","sm","marginTop","alignItems","transition","InitialDataModal","open","setOpen","setIsCodeInterview","setIsInterviewer","guidInterview","inputsValues","setInputsValues","handleSubmit","isOpen","objectSpread","defineProperty","switch","role","checked","check","disabled","faPhoneSlash","Entrevista","showInitialModal","setShowInitialModal","marginRight","components_VideoPlayer","position","right","components_Chat","transform","clipboard","writeText","offset","components_TextAreaCode","components_InitialDataModal","Layout","zIndex","App","components_Layout","Index","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","SocketContext_ContextProvider","src_App"],"mappings":"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","file":"static/js/main.19a9ff58.chunk.js","sourcesContent":["import React, {createContext, useState, useRef, useEffect} from \"react\";\nimport {io} from \"socket.io-client\";\nimport Peer from \"simple-peer\";\n\nconst SocketContext = createContext();\n\nconst socket = io(\"https://sisep-video-chat-app.herokuapp.com/\");\n\nconst ContextProvider = ({children}) => {\n    const [stream, setStream] = useState(null);\n    const [me, setMe] = useState(\"\");\n    const [call, setCall] = useState({});\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [name, setName] = useState(\"\");\n    const [interviewedName, setInterviewedName] = useState(\"\");\n\n    const myVideo = useRef();\n    const userVideo = useRef();\n    const connectionRef = useRef();\n\n    useEffect(() => {\n        navigator.mediaDevices\n            .getUserMedia({video: true, audio: true})\n            .then(currentStream => {\n                setStream(currentStream);\n                if (myVideo.current) myVideo.current.srcObject = currentStream;\n            });\n\n        socket.on(\"me\", id => setMe(id));\n\n        socket.on(\"calluser\", ({from, name: callerName, signal}) => {\n            setCall({isReceivingCall: true, from, name: callerName, signal});\n        });\n    }, []);\n\n    const answercall = isCodeInterview => {\n        setCallAccepted(true);\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream: stream,\n        });\n\n        peer.on(\"signal\", data => {\n            socket.emit(\"answercall\", {signal: data, to: call.from});\n        });\n\n        peer.on(\"stream\", currentStream => {\n            userVideo.current.srcObject = currentStream;\n        });\n\n        peer.signal(call.signal);\n\n        connectionRef.current = peer;\n    };\n\n    const callUser = (id, callingName) => {\n        const peer = new Peer({initiator: true, trickle: false, stream});\n\n        peer.on(\"signal\", data => {\n            socket.emit(\"calluser\", {\n                userToCall: id,\n                signalData: data,\n                from: me,\n                name: callingName,\n            });\n        });\n\n        peer.on(\"stream\", currentStream => {\n            userVideo.current.srcObject = currentStream;\n        });\n\n        socket.on(\"callaccepted\", signal => {\n            setCallAccepted(true);\n            setInterviewedName(name);\n\n            peer.signal(signal);\n        });\n\n        connectionRef.current = peer;\n    };\n\n    const leaveCall = () => {\n        setCallEnded(true);\n\n        connectionRef.current.destroy();\n\n        window.location.reload();\n    };\n\n    return (\n        <SocketContext.Provider\n            value={{\n                call,\n                callAccepted,\n                callEnded,\n                myVideo,\n                userVideo,\n                stream,\n                name,\n                setName,\n                interviewedName,\n                setInterviewedName,\n                me,\n                callUser,\n                leaveCall,\n                answercall,\n            }}\n        >\n            {children}\n        </SocketContext.Provider>\n    );\n};\n\nexport {ContextProvider, SocketContext};\n","import React, {useContext} from \"react\";\r\nimport \"./styles/RowMessage.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {faClock, faCheckDouble} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {SocketContext} from \"../../../SocketContext\";\r\nlibrary.add(faClock, faCheckDouble);\r\n\r\nconst RowMessage = props => {\r\n    const {name} = useContext(SocketContext);\r\n    const {message, messageName, date} = props;\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"divChatMessage\"\r\n                style={{justifyContent: messageName === name ? \"right\" : \"left\"}}\r\n            >\r\n                <div className=\"divText\">\r\n                    <div>\r\n                        <span className=\"spanName\">{messageName}</span>\r\n                    </div>\r\n                    <span>{message}</span>\r\n                    <div className=\"divMessageTime\">\r\n                        <span>{`${date\r\n                            .getHours()\r\n                            .toString()\r\n                            .padStart(2, \"0\")}:${date\r\n                            .getMinutes()\r\n                            .toString()\r\n                            .padStart(2, \"0\")}`}</span>\r\n                        <FontAwesomeIcon\r\n                            className=\"iconTime\"\r\n                            icon=\"fa-solid fa-clock\"\r\n                            size=\"sm\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RowMessage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const DivChat = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    flex-direction: column-reverse;\r\n    height: 95vh;\r\n    max-height: 95vh;\r\n    overflow-y: auto;\r\n    background-color: #f0f0f0;\r\n    border-color: #f2f2f2;\r\n`;\r\n","import styled from 'styled-components'\r\n\r\nexport const DivSendMessage = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    height: 5vh;\r\n    max-height: 5vh;\r\n    width: 98%;\r\n    border-color: #f2f2f2;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const InputMessage = styled.input`\r\n    //border-color: 1px white !important;\r\n    border: 1px solid lightgray;\r\n    color: rgb(120, 120, 120) !important;\r\n    font-size: 0.8rem !important;\r\n    transition: 400ms !important;\r\n    margin-right: 0.25rem;\r\n    padding: 0.3rem;\r\n    width: 100%;\r\n\r\n    &:focus {\r\n        background-color: #f7f7f7 !important;\r\n        border-color: #acacac !important;\r\n        outline: 0 !important;\r\n        box-shadow: 0 0 0 0.15rem #ededed !important;\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const SendIcon = styled(FontAwesomeIcon)`\r\n    color: #5797f5;\r\n    transition: all 500ms;\r\n    margin-bottom: 0.25rem;\r\n\r\n    &:hover {\r\n        color: #2d4f81;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/auth\";\r\nrequire('dotenv').config()\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_APP_MEASUREMENT_ID,\r\n};\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = app.auth();\r\nexport const firestore = app.firestore();\r\nexport const _auth = firebase.auth;\r\nexport default app;\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {faCircleChevronRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport RowMessage from \"./RowMessage\";\r\nimport {DivChat} from \"./styles/DivChat\";\r\nimport {DivSendMessage} from \"./styles/DivSendMessage\";\r\nimport {InputMessage} from \"./styles/InputMessage\";\r\nimport {SendIcon} from \"./styles/SendIcon\";\r\nimport {firestore} from \"../../../helpers/firebase\";\r\nimport {Timestamp} from \"@firebase/firestore\";\r\nimport {SocketContext} from \"../../../SocketContext\";\r\n\r\nlibrary.add(faCircleChevronRight);\r\n\r\nconst Chat = ({isInterviewer}) => {\r\n    const {name} = useContext(SocketContext);\r\n    const [conversationState, setConversationState] = useState([]);\r\n    const [messageState, setMessageState] = useState(\"\");\r\n\r\n    const handleSubmitMessage = async () => {\r\n        if (messageState !== \"\") {\r\n            await firestore.collection(\"conversations\").add({\r\n                guid: \"ASDGSFG1231\",\r\n                message: messageState,\r\n                date: Timestamp.fromDate(new Date()),\r\n                isEntrevistador: isInterviewer,\r\n                name: name,\r\n            });\r\n\r\n            setMessageState(\"\");\r\n        }\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        await firestore.collection(\"conversations\").onSnapshot(res =>\r\n            setConversationState(\r\n                res.docs\r\n                    .sort((a, b) => b.data().date.seconds - a.data().date.seconds)\r\n                    .map(doc => {\r\n                        const data = doc.data();\r\n\r\n                        return {\r\n                            guid: data.guid,\r\n                            date: new Date(data.date.seconds * 1000),\r\n                            isEntrevistador: data.isEntrevistador,\r\n                            message: data.message,\r\n                            name: data.name,\r\n                        };\r\n                    })\r\n            )\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div style={{borderLeft: \"1px solid #cbcbcb\"}}>\r\n                <DivChat>\r\n                    {conversationState &&\r\n                        conversationState.length > 0 &&\r\n                        conversationState.map(conversation => {\r\n                            return (\r\n                                <RowMessage\r\n                                    message={conversation.message}\r\n                                    emisor={conversation.isEntrevistador}\r\n                                    messageName={conversation.name}\r\n                                    date={conversation.date}\r\n                                />\r\n                            );\r\n                        })}\r\n                </DivChat>\r\n                <DivSendMessage>\r\n                    <InputMessage\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Escriba un mensaje...\"\r\n                        value={messageState}\r\n                        onChange={e => setMessageState(e.target.value)}\r\n                        onKeyUp={e => {\r\n                            e.key === \"Enter\" && handleSubmitMessage();\r\n                        }}\r\n                    ></InputMessage>\r\n                    <SendIcon\r\n                        onClick={() => handleSubmitMessage()}\r\n                        icon=\"fa-solid fa-circle-chevron-right\"\r\n                        size=\"lg\"\r\n                    ></SendIcon>\r\n                </DivSendMessage>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","import React, {useEffect, useState} from \"react\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport {Timestamp} from \"@firebase/firestore\";\nimport {firestore} from \"../../../helpers/firebase\";\n\nconst TextAreaCode = () => {\n    const [docIdState, setDocIdState] = useState(\"\");\n    const [codeState, setCodeState] = useState(\"\");\n\n    const handleSetCode = async () => {\n        if (docIdState.length > 0) {\n            await firestore\n                .collection(\"codes\")\n                .doc(docIdState)\n                .set({\n                    guid: \"ASDGSFG1231\",\n                    code: codeState,\n                    date: Timestamp.fromDate(new Date()),\n                });\n        } else {\n            await firestore\n                .collection(\"codes\")\n                .add({\n                    guid: \"ASDGSFG1231\",\n                    code: codeState,\n                    date: Timestamp.fromDate(new Date()),\n                })\n                .then(doc => setDocIdState(doc.id));\n        }\n    };\n\n    //TODO: Cuando se pueda reingresar a una entrevista esto va a traer el codigo\n    const fetchData = async () => {\n        await firestore.collection(\"codes\").onSnapshot(res => {\n            const savedCode = res.docs.find(\n                doc => doc.data().guid === \"ASDGSFG1231\" && doc.data().code !== \"\"\n            );\n            if (savedCode) {\n                setCodeState(savedCode.data().code);\n            }\n        });\n    };\n\n    useEffect(() => {\n        handleSetCode();\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        handleSetCode();\n    }, [codeState]);\n\n    return (\n        <>\n            <CodeEditor\n                value={codeState}\n                language=\"js\"\n                placeholder=\"Please enter JS code.\"\n                onChange={evn => setCodeState(evn.target.value)}\n                onKeyUp={e => e.key === \"Enter\" && setCodeState(`${codeState}`)}\n                padding={15}\n                style={{\n                    fontSize: 12,\n                    border: \"1px solid lightgray\",\n                    backgroundColor: \"#efefef\",\n                    marginBottom: \"15%\",\n                    minHeight: \"100%\",\n                    fontFamily:\n                        \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n                }}\n            />\n        </>\n    );\n};\n\nexport default TextAreaCode;\n","import React, {useContext} from \"react\";\nimport {Button, Col, Row} from \"reactstrap\";\nimport {SocketContext} from \"../../../SocketContext\";\n\nconst VideoPlayer = ({isCodeInterview, isInterviewer}) => {\n    const {\n        name,\n        callAccepted,\n        myVideo,\n        userVideo,\n        callEnded,\n        stream,\n        call,\n        answercall,\n    } = useContext(SocketContext);\n\n    return (\n        <>\n            {stream && (\n                <>\n                    <Row style={{paddingLeft: \"3%\", paddingTop: \"5%\"}}>\n                        <Col\n                            xs={6}\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                textAlign: \"center\",\n                                paddingLeft: \"0px\",\n                                paddingRight: \"2px\",\n                            }}\n                        >\n                            <video\n                                width={\"100%\"}\n                                height={\"100%\"}\n                                playsInline\n                                muted\n                                ref={myVideo}\n                                autoPlay\n                                style={{borderRadius: \"1%\"}}\n                            />\n                            <span style={{fontWeight: \"bold\", color: \"#4a4a4a\"}}>\n                                {name}\n                            </span>\n                        </Col>\n                        {call.isReceivingCall && !callAccepted ? (\n                            <Col sm={6}>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        marginTop: \"40%\",\n                                        alignItems: \"center\",\n                                        flexDirection: \"column\",\n                                        transition: \"500ms\",\n                                    }}\n                                >\n                                    <h3 style={{color: \"#4a4a4a\", textAlign: \"center\"}}>\n                                        {call.name} ha solicitado entrar a la llamada\n                                    </h3>\n                                    <Button\n                                        style={{width: \"25%\"}}\n                                        color=\"primary\"\n                                        onClick={() => answercall(isCodeInterview)}\n                                    >\n                                        Habilitar\n                                    </Button>\n                                </div>\n                            </Col>\n                        ) : (\n                            !callAccepted && (\n                                <Col sm={6}>\n                                    <div\n                                        style={{\n                                            display: \"flex\",\n                                            marginTop: \"40%\",\n                                            alignItems: \"center\",\n                                            flexDirection: \"column\",\n                                            transition: \"500ms\",\n                                        }}\n                                    >\n                                        <h3\n                                            style={{\n                                                color: \"#4a4a4a\",\n                                                textAlign: \"center\",\n                                            }}\n                                        >\n                                            {isInterviewer\n                                                ? \"Esperando al cantidado...\"\n                                                : \"Esperando al entrevistador...\"}\n                                        </h3>\n                                        <div className=\"loader\"></div>\n                                    </div>\n                                </Col>\n                            )\n                        )}\n                        {callAccepted && !callEnded && (\n                            <>\n                                <Col\n                                    xs={6}\n                                    style={{\n                                        display: \"flex\",\n                                        flexDirection: \"column\",\n                                        textAlign: \"center\",\n                                        paddingLeft: \"2px\",\n                                        paddingRight: \"0px\",\n                                    }}\n                                >\n                                    <video\n                                        width={\"100%\"}\n                                        height={\"100%\"}\n                                        playsInline\n                                        muted\n                                        ref={userVideo}\n                                        autoPlay\n                                        style={{borderRadius: \"1%\"}}\n                                    />\n                                    <span\n                                        style={{fontWeight: \"bold\", color: \"#4a4a4a\"}}\n                                    >\n                                        {isInterviewer ? \"Candidato\" : \"Entrevistador\"}\n                                    </span>\n                                </Col>\n                            </>\n                        )}\n                    </Row>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default VideoPlayer;\n","import React, {useContext, useState} from \"react\";\nimport {\n    Button,\n    Col,\n    FormGroup,\n    Input,\n    Label,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    Row,\n} from \"reactstrap\";\nimport {SocketContext} from \"../../../SocketContext\";\n\nconst InitialDataModal = ({\n    open,\n    setOpen,\n    isCodeInterview,\n    setIsCodeInterview,\n    isInterviewer,\n    setIsInterviewer,\n}) => {\n    const {setName, callUser} = useContext(SocketContext);\n    const [inputsValues, setInputsValues] = useState({\n        name: \"\",\n        guidInterview: \"\",\n    });\n\n    const handleSubmit = () => {\n        if (isInterviewer) {\n            setName(inputsValues.name);\n            setOpen(!open);\n        } else {\n            setName(inputsValues.name);\n            callUser(inputsValues.guidInterview, inputsValues.name);\n            setOpen(!open);\n        }\n    };\n\n    return (\n        <Modal isOpen={open} style={{paddingTop: \"10%\"}}>\n            <ModalBody>\n                {isInterviewer ? (\n                    <>\n                        <Row>\n                            <Col sm={12}>\n                                <FormGroup>\n                                    <Input\n                                        type=\"text\"\n                                        value={inputsValues.name}\n                                        name=\"name\"\n                                        autoComplete=\"off\"\n                                        placeholder=\"Ingrese su nombre\"\n                                        onChange={e => {\n                                            setInputsValues({\n                                                ...inputsValues,\n                                                [e.target.name]: e.target.value,\n                                            });\n                                        }}\n                                        onKeyUp={e => {\n                                            if (e.key === \"Enter\") handleSubmit();\n                                        }}\n                                    />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={6}>\n                                <FormGroup switch>\n                                    <Input\n                                        type=\"switch\"\n                                        role=\"switch\"\n                                        autoComplete=\"off\"\n                                        checked={isCodeInterview}\n                                        onChange={() =>\n                                            setIsCodeInterview(!isCodeInterview)\n                                        }\n                                    />\n                                    <Label check>Es entrevista con codigo</Label>\n                                </FormGroup>\n                            </Col>\n                            <Col sm={6}>\n                                <FormGroup switch>\n                                    <Input\n                                        type=\"switch\"\n                                        role=\"switch\"\n                                        checked={isInterviewer}\n                                        onChange={() =>\n                                            setIsInterviewer(!isInterviewer)\n                                        }\n                                    />\n                                    <Label check>Es entrevistador</Label>\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                    </>\n                ) : (\n                    <>\n                        <Row>\n                            <Col sm={12}>\n                                <FormGroup>\n                                    <Input\n                                        type=\"text\"\n                                        value={inputsValues.name}\n                                        autoComplete=\"off\"\n                                        placeholder=\"Ingrese su nombre\"\n                                        name=\"name\"\n                                        onChange={e => {\n                                            setInputsValues({\n                                                ...inputsValues,\n                                                [e.target.name]: e.target.value,\n                                            });\n                                        }}\n                                        onKeyUp={e => {\n                                            if (e.key === \"Enter\") handleSubmit();\n                                        }}\n                                    />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <FormGroup>\n                                    <Input\n                                        type=\"text\"\n                                        value={inputsValues.guidInterview}\n                                        autoComplete=\"off\"\n                                        name=\"guidInterview\"\n                                        placeholder=\"Código de la entrevista\"\n                                        onChange={e => {\n                                            setInputsValues({\n                                                ...inputsValues,\n                                                [e.target.name]: e.target.value,\n                                            });\n                                        }}\n                                        onKeyUp={e => {\n                                            if (e.key === \"Enter\") handleSubmit();\n                                        }}\n                                    />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={6}>\n                                <FormGroup switch>\n                                    <Input\n                                        type=\"switch\"\n                                        role=\"switch\"\n                                        checked={isCodeInterview}\n                                        onChange={() =>\n                                            setIsCodeInterview(!isCodeInterview)\n                                        }\n                                    />\n                                    <Label check>Es entrevista con código</Label>\n                                </FormGroup>\n                            </Col>\n                            <Col sm={6}>\n                                <FormGroup switch>\n                                    <Input\n                                        type=\"switch\"\n                                        role=\"switch\"\n                                        checked={isInterviewer}\n                                        onChange={() =>\n                                            setIsInterviewer(!isInterviewer)\n                                        }\n                                    />\n                                    <Label check>Es entrevistador</Label>\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                    </> \n                )}\n            </ModalBody>\n            <ModalFooter>\n                <Button\n                    color=\"primary\"\n                    onClick={() => handleSubmit()}\n                    disabled={\n                        isInterviewer\n                            ? inputsValues.name.length === 0\n                            : inputsValues.guidInterview.length === 0 ||\n                              inputsValues.name.length === 0\n                    }\n                >\n                    Unirme ahora\n                </Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default InitialDataModal;\n","import React, {useContext, useState} from \"react\";\r\nimport {Button, Col, Row} from \"reactstrap\";\r\nimport Chat from \"./components/Chat\";\r\nimport TextAreaCode from \"./components/TextAreaCode\";\r\nimport VideoPlayer from \"./components/VideoPlayer\";\r\nimport InitialDataModal from \"./components/InitialDataModal\";\r\nimport {SocketContext} from \"../../SocketContext\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {faPhoneSlash} from \"@fortawesome/free-solid-svg-icons\";\r\nlibrary.add(faPhoneSlash);\r\n\r\nconst Entrevista = () => {\r\n    const {me, callAccepted, callEnded, leaveCall, call, answercall} = useContext(\r\n        SocketContext\r\n    );\r\n    const [showInitialModal, setShowInitialModal] = useState(true);\r\n    const [isCodeInterview, setIsCodeInterview] = useState(false);\r\n    const [isInterviewer, setIsInterviewer] = useState(false);\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(me);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row style={{display: showInitialModal && \"none\", marginRight: \"0px\"}}>\r\n                <Col sm={9}>\r\n                    <VideoPlayer\r\n                        isInterviewer={isInterviewer}\r\n                        isCodeInterview={isCodeInterview}\r\n                    />\r\n                </Col>\r\n                <Col sm={3} style={{position: \"fixed\", right: \"-1%\"}}>\r\n                    <Chat isInterviewer={isInterviewer} />\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginRight: \"0px\", paddingLeft: \"1%\"}}>\r\n                <Col sm={9} style={{textAlign: \"center\"}}>\r\n                    {callAccepted && !callEnded && (\r\n                        <Button color=\"danger\" onClick={leaveCall}>\r\n                            <FontAwesomeIcon\r\n                                style={{transform: \"rotate(90deg)\"}}\r\n                                icon=\"fa-solid fa-phone-slash\"\r\n                                size=\"sm\"\r\n                            />\r\n                        </Button>\r\n                    )}\r\n                    {!callAccepted && isInterviewer && (\r\n                        <Button\r\n                            style={{display: showInitialModal}}\r\n                            color=\"primary\"\r\n                            onClick={copyToClipboard}\r\n                        >\r\n                            Compartir código\r\n                        </Button>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n            {isCodeInterview && (\r\n                <Row\r\n                    style={{\r\n                        display: showInitialModal && \"none\",\r\n                        marginTop: \"5%\",\r\n                        marginRight: \"0px\",\r\n                        marginBottom: \"3%\",\r\n                    }}\r\n                >\r\n                    <Col sm={{offset: 1, size: 7}}>\r\n                        <TextAreaCode />\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n\r\n            <InitialDataModal\r\n                open={showInitialModal}\r\n                setOpen={setShowInitialModal}\r\n                isCodeInterview={isCodeInterview}\r\n                setIsCodeInterview={setIsCodeInterview}\r\n                isInterviewer={isInterviewer}\r\n                setIsInterviewer={setIsInterviewer}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Entrevista;\r\n","import React from \"react\";\r\nimport \"./styles/Layout.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Layout = ({children}) => {\r\n    return (\r\n        <>\r\n            <nav\r\n                className=\"navbar navbar-expand-lg navbar-light p-0\"\r\n                style={{\r\n                    backgroundColor: \"#275fb3\",\r\n                    position: \"fixed\",\r\n                    width: \"100%\",\r\n                    zIndex: 99,\r\n                }}\r\n            >\r\n                <div className=\"container-fluid\">\r\n                    <div\r\n                        className=\"navbar-brand\"\r\n                        style={{color: \"#d5d2d2\", fontWeight: \"600\"}}\r\n                    >\r\n                        SISEP\r\n                    </div>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        {/* <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <div className=\"nav-link navItem\">\r\n                                    <Link className=\"linkItem\" to=\"/Entrevista\">\r\n                                        Mis entrevistas\r\n                                    </Link>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <div className=\"nav-link navItem\">Mis detalles</div>\r\n                            </li>\r\n                        </ul> */}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Entrevista from \"./pages/Entrevista/Index\";\nimport Layout from \"./components/Layout\";\nfunction App() {\n    return (\n        // <Router>\n        <Layout>\n            {/* <Switch>\n                     <Route path=\"/Entrevista\"> */}\n            <Entrevista />\n            {/* </Route>\n                 </Switch> */}\n        </Layout>\n        // </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {ContextProvider} from \"./SocketContext\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nrequire(\"dotenv\").config();\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <React.StrictMode>\n        <ContextProvider>\n            <App />\n        </ContextProvider>\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}